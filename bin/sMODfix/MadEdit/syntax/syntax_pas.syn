# Delphi/Pascal
Title=Pascal/Delphi
CaseSensitive=No
Delimiter=~`!@#$%^&*()-+=|\{}[]:;"',.<>/?
LineComment=//
BlockComment={ } (* *)
EscapeChar=
StringChar='"
DirectiveLeading=
KeywordPrefix=
SpecialWordPrefix=
IndentChar=
UnindentChar=
BracePair=begin end { } [ ] ( )
AutoCompletePair=() [] {} "" ''

# System Predefined Color & Style
TextColor=Black
TextBgColor=White
TextStyle=

DelimiterColor=SaddleBrown
DelimiterBgColor=
DelimiterStyle=

SpaceColor=Aqua
SpaceBgColor=
SpaceStyle=

NumberColor=Blue
NumberBgColor=
NumberStyle=

StringColor=Red
StringBgColor=
StringStyle=

CommentColor=Teal
CommentBgColor=
CommentStyle=

DirectiveColor=Green
DirectiveBgColor=
DirectiveStyle=

SpecialWordColor=Navy
SpecialWordBgColor=
SpecialWordStyle=

LineNumberColor=White
LineNumberBgColor=A0A0A0
LineNumberStyle=

ActiveLineColor=Fuchsia
BookmarkColor=C0FFFF

# User Defined Keywords
[1.Keywords]
Color=Black
BgColor=
Style=Bold
InRange=0
Keyword=integer byte word boolean true false single double array asm begin case class const onstructor destructor dispinterface do downto else end except exit exports file finalization finally for function goto if implementation inherited initialization inline interface label library nil object of out packed procedure program property raise record repeat resourcestring result self set string then threadvar to try type unit until uses var while with

[2.Directives]
Color=DarkBlue
BgColor=
Style=Bold
InRange=0
Keyword=absolute abstract assembler automated cdecl contains default dispid dynamic export external far forward implements index message name near nodefault overload override package pascal private protected public published read readonly register reintroduce requires resident safecall stdcall stored virtual write writeonly

[3.Operators]
Color=ForestGreen
BgColor=
Style=Bold
InRange=0
Keyword=and as dec div in inc is mod not or shl shr sizeof xor
